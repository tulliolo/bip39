#!/usr/bin/python3
#
#   Copyright (C) 2022 Tullio Loffredo, @tulliolo
#
#   It is subject to the license terms in the LICENSE file found in the top-level
#   directory of this distribution.
#
#   No part of this software, including this file, may be copied, modified,
#   propagated, or distributed except according to the terms contained in the
#   LICENSE file.
#   The above copyright notice and this permission notice shall be included in
#   all copies or substantial portions of the Software.
#
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#   FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
from generator.seed import Seed


def __print_header():
    print(
        "*********************\n"
        "** mnemonic_fixsum **\n"
        "*********************\n"
        "Insert a 'candidate' mnemonic, e.g. generated by dices.\n"
        "The tool will modify the last word, matching a valid bip39 checksum.\n"
    )


def __mnemonic_fixsum():
    __print_header()

    try:
        print("insert a candidate bip39 mnemonic:")
        mnemonic = Seed.from_mnemonic(input("mnemonic > ").strip(), True).mnemonic
        print(f"\na valid bip39 mnemonic is:\n{' '.join(mnemonic)}")
    except Exception as e:
        print(e)
        exit(-1)


if __name__ == "__main__":
    __mnemonic_fixsum()